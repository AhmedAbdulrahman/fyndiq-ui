@import "fyndiq-styles-colors/colors.css";

.wrapper {
  display: inline-flex;
  position: relative;
}

.dropdownWrapper {
  position: absolute;
  z-index: 1;
}

.dropdownDefault {
  width: 100%;
  min-width: 220px;
  border: 1px solid var(--color-border);
  background-color: var(--color-white);
  border-radius: 2px;
  box-shadow: 0 0 10px color(var(--color-black) a(10%));
}

.position {
  animation: .15s cubic-bezier(.23, 1, .32, 1.2) normal forwards;
}

:root {
  --scaleFactor: .92;
  --translateFactor: 4px;
}

.position-bl {
  composes: position;
  animation-name: bl;
}

.arrow {
  height: 1em;
  width: 1em;
  margin: 0 0 0 .5em;
  vertical-align: middle;
}

@keyframes bl {
  from {
    opacity: 0;
    transform: translate(0, -var(--translateFactor)) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.position-bc {
  composes: position;
  animation-name: bc;
}

@keyframes bc {
  from {
    opacity: 0;
    transform: translate(-50%, -var(--translateFactor)) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: translateX(-50%);
  }
}

.position-br {
  composes: position;
  animation-name: br;
}

@keyframes br {
  from {
    opacity: 0;
    transform: translate(-100%, -var(--translateFactor)) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: translateX(-100%);
  }
}

/* Top */

.position-tl {
  composes: position;
  animation-name: tl;
}

@keyframes tl {
  from {
    opacity: 0;
    transform: translate(0, calc(-100% + var(--translateFactor))) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: translate(0, -100%);
  }
}

.position-tc {
  composes: position;
  animation-name: tc;
}

@keyframes tc {
  from {
    opacity: 0;
    transform: translate(-50%, calc(-100% + var(--translateFactor))) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: translate(-50%, -100%);
  }
}

.position-tr {
  composes: position;
  animation-name: tr;
}

@keyframes tr {
  from {
    opacity: 0;
    transform: translate(-100%, calc(-100% + var(--translateFactor))) scale(var(--scaleFactor));
  }

  to {
    opacity: 1;
    transform: translate(-100%, -100%);
  }
}
